old_sound_rabbit_mq:
#    connections:
#        default:
#            url: '%env(RABBITMQ_URL)%'
#    producers:
#        # use 'old_sound_rabbit_mq.task_producer' service to send data.
#        task:
#            connection:       default
#            exchange_options: { name: 'task', type: direct }
#    consumers:
#        task:
#            connection:       default
#            exchange_options: { name: 'task', type: direct }
#            queue_options:    { name: 'task'}
#            callback:         App\Consumer\TaskConsumer


    connections:
        default:
            url: '%env(RABBITMQ_URL)%'
            lazy: false
    producers:
        view:
            connection: default
            exchange_options:
                name: 'view_exchange'
                type: topic
        webpush_notification:
            connection: default
            exchange_options:
                name: 'webpush_notification_exchange'
                type: topic
    consumers:
        view:
            connection: default
            exchange_options:
                name: 'view_exchange'
                type: topic
            queue_options:
                name: 'view_queue'
            callback: 'App\Consumer\ViewConsumer'
        webpush_notification:
            connection: default
            exchange_options:
                name: 'webpush_notification_exchange'
                type: topic
            queue_options:
                name: 'webpush_notification_queue'
            callback: 'App\Consumer\WebpushNotificationConsumer'